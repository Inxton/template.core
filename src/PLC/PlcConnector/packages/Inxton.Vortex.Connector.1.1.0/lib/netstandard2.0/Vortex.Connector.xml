<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vortex.Connector</name>
    </assembly>
    <members>
        <member name="T:Vortex.Connector.ConnectorAdapter">
            <summary>
            Provides basic abstractions for vortex connectors.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ConnectorAdapter.GetConnector(System.Object[])">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.ConnectorAdapter"/>.
            </summary>
            <param name="parameters">Connector parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.ConnectorAdapter.#ctor">
            <summary>
            Create new instance of empty <see cref="T:Vortex.Connector.ConnectorAdapter"/>
            </summary>
        </member>
        <member name="M:Vortex.Connector.ConnectorAdapter.#ctor(System.Type)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.ConnectorAdapter"/> for specific target controller type.
            </summary>
            <param name="onlineAdapterType">Type of adapter</param>
        </member>
        <member name="P:Vortex.Connector.ConnectorAdapter.AdapterType">
            <summary>
            Gets or sets adapter type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ConnectorAdapter.Adapter">
            <summary>
            Get an instance of adapter stored in <see cref="P:Vortex.Connector.ConnectorAdapter.AdapterType"/> property.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ConnectorAdapter.Parameters">
            <summary>
            Adapter's parameters.
            </summary>
        </member>
        <member name="T:Vortex.Connector.IConnectorFactory">
            <summary>
            Provides abstraction for creation of <see cref="T:Vortex.Connector.IConnector"/> and value types (tags) for vortex connector. 
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateConnector(System.Object[])">
            <summary>
            Creates new instance of connector.
            </summary>        
            <remarks>
            This class is typically used by the 'vortex builder' to create value types (tags) for given connector.
            </remarks>
            <param name="parameters">Connector parameters</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateBOOL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Boolean"/> tag of a value type BOOL;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateBYTE(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Byte"/> tag of a value type BYTE;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt16"/> tag of a value type WORD;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt32"/> tag of a value type DWORD;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt64"/> tag of a value type DWORD;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateSINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.SByte"/> tag of a value type SINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUSINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Byte"/> tag of a value type USINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int16"/> tag of a value type INT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt16"/> tag of a value type UINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int32"/> tag of a value type DINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUDINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt32"/> tag of a value type UDINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int64"/> tag of a value type LINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateULINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt64"/> tag of a value type ULINT;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateREAL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Single"/> tag of a value type REAL;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLREAL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Double"/> tag of a value type LREAL;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateSTRING(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.String"/> tag of a value type STRING;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerString"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateWSTRING(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.String"/> tag of a value type WSTRING;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateTIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> tag of a value type TIME;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDATE_TIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.DateTime"/> tag of a value type DT, DATE_TIME;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDATE(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.DateTime"/> tag of a value type DATE;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateTIME_OF_DAY(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> tag of a value type TOD (Time of day);
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLTIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> tag of a value type LTIME;
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateBOOL">
            <summary>
            Creates <see cref="T:System.Boolean"/> empty tag of a value type BOOL;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateBYTE">
            <summary>
            Creates <see cref="T:System.Byte"/> empty tag of a value type BYTE;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateWORD">
            <summary>
            Creates <see cref="T:System.UInt16"/> empty tag of a value type WORD;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDWORD">
            <summary>
            Creates <see cref="T:System.UInt32"/> empty tag of a value type DWORD;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLWORD">
            <summary>
            Creates <see cref="T:System.UInt64"/> empty tag of a value type LWORD;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateSINT">
            <summary>
            Creates <see cref="T:System.SByte"/> empty tag of a value type SINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUSINT">
            <summary>
            Creates <see cref="T:System.Byte"/> empty tag of a value type USINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateINT">
            <summary>
            Creates <see cref="T:System.Int16"/> empty tag of a value type INT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUINT">
            <summary>
            Creates <see cref="T:System.UInt16"/> empty tag of a value type UINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDINT">
            <summary>
            Creates <see cref="T:System.Int32"/> empty tag of a value type DINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateUDINT">
            <summary>
            Creates <see cref="T:System.UInt32"/> empty tag of a value type UDINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLINT">
            <summary>
            Creates <see cref="T:System.Int64"/> empty tag of a value type LINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateULINT">
            <summary>
            Creates <see cref="T:System.UInt64"/> empty tag of a value type ULINT;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateREAL">
            <summary>
            Creates <see cref="T:System.Single"/> empty tag of a value type REAL;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLREAL">
            <summary>
            Creates <see cref="T:System.Double"/> empty tag of a value type LREAL;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateSTRING">
            <summary>
            Creates <see cref="T:System.String"/> empty tag of a value type STRING;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateWSTRING">
            <summary>
            Creates <see cref="T:System.String"/> empty tag of a value type WSTRING;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateTIME">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> empty tag of a value type TIME;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDATE_TIME">
            <summary>
            Creates <see cref="T:System.DateTime"/> empty tag of a value type DATE_AND_TIME (DT);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateDATE">
            <summary>
            Creates <see cref="T:System.DateTime"/> empty tag of a value type DATE;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateTIME_OF_DAY">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> empty tag of a value type TIME_OF_DAY;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IConnectorFactory.CreateLTIME">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> empty tag of a value type LTIME;
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.Attributes.AssemblyPlcCounterPart">
            <summary>
            Provides meta information about Plc controller types that is linked to respective connector.
            <note type="note">
               This attribute is not applicable in framework consumers code. It serves a purpose of providing information about the library metadata.
            </note>
            </summary>
        </member>
        <member name="M:Vortex.Connector.Attributes.AssemblyPlcCounterPart.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.Attributes.AssemblyPlcCounterPart"/>.
            </summary>
            <param name="plcLibraryMetaData">Plc library metadata.</param>
        </member>
        <member name="P:Vortex.Connector.Attributes.AssemblyPlcCounterPart.PlcLibraryMetaData">
            <summary>
            Plc's library metadata.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Attributes.CompilerOmitsAttribute">
            <summary>
            Prevents vortex builder to create a member for specific group of output type (Shadow, Plain, Onliner).
            <note type="note">This attribute must be declared in the PLC code to be effective during build process.</note>
            <example>
            This example demonstrates how to prevent the vortex builder to compile specific property into specific output group.
            <code>
                // This will not compile to 'omitsInPlainString' member into respective 'Plain' type.
                {attribute clr [CompilerOmits(CompilerOmissionGroups.BuilderPlainer))]} 
                ommitsInPlainString : STRING(50) := 'THIS IS OMMITED IN PLAINER';     
                // This will not compile to 'ommitsInPlainAndShadowerInterfaceString' member into respective 'Plain' type and Shadow interface.
                {attribute clr [CompilerOmits(CompilerOmissionGroups.BuilderPlainer, CompilerOmissionGroups.BuilderShadowerInterface))]} 
                ommitsInPlainAndShadowerInterfaceString : STRING(50) := 'THIS IS OMMITED IN PLAINER';     
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Vortex.Connector.Attributes.CompilerOmitsAttribute.#ctor(System.String[])">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.Attributes.CompilerOmitsAttribute"/>.
            </summary>
            <param name="omissions">Determines group(s) of output type where the member shall be omitted.</param>            
        </member>
        <member name="M:Vortex.Connector.Attributes.CompilerOmitsAttribute.#ctor(Vortex.Connector.Attributes.CompilerOmissionGroups[])">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.Attributes.CompilerOmitsAttribute"/>.
            </summary>
            <param name="omissions">Determines group(s) of output type where the member shall be omitted. <see cref="T:Vortex.Connector.Attributes.CompilerOmissionGroups"/></param>
        </member>
        <member name="P:Vortex.Connector.Attributes.CompilerOmitsAttribute.Omissions">
            <summary>
            Gets the list of groups of output type in which the member will not be included.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Attributes.CompilerOmissionGroups">
            <summary>
            Builder omission groups enumerator. Enumerates builder output groups suitable 
            for the omission.
            </summary>
        </member>
        <member name="F:Vortex.Connector.Attributes.CompilerOmissionGroups.BuilderOnliner">
            <summary>
            Omits in Onliner 
            </summary>
        </member>
        <member name="F:Vortex.Connector.Attributes.CompilerOmissionGroups.BuilderOnlinerInterface">
            <summary>
            Omits in Onliner Interface 
            </summary>
        </member>
        <member name="F:Vortex.Connector.Attributes.CompilerOmissionGroups.BuilderShadowerInterface">
            <summary>
            Omits in Shadower Interface
            </summary>
        </member>
        <member name="F:Vortex.Connector.Attributes.CompilerOmissionGroups.BuilderPlainer">
            <summary>
            Omits in Plain (POCO) objects.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Attributes.ReadOnlyAttribute">
            <summary>
            Attribute allows to prevent writing to the members of Vortex connector.
            <para>
            <see cref="T:Vortex.Connector.Attributes.ReadOnlyAttribute"/> can be declared for member of a FB, GVL or STRUCT.
            </para>
            <note>This attribute is typically defined in the declaration section of PLC block and then
                  trans-piled by Vortex.Builder.  
            </note>
            <note type="warning">Use of <see cref="T:Vortex.Connector.Attributes.ReadOnlyAttribute"/> does not prevent the PLC program to write to the variable that declares this attribute.</note>
            <example>
                This example demonstrates declaration of <see cref="T:Vortex.Connector.Attributes.ReadOnlyAttribute"/> on a member of a FB.
                <code>
                    FUNCTION_BLOCK fbSomeReadOnlyMembers 
                    VAR
                        {attribute clr [ReadOnly()]]}
                        _nonWrittableItem : BOOL;       // Member is readonly for .net application.
                        {attribute clr [ReadOnly()]]}
                        _nonWrittableFunctionBlock : fbNonWrittable; // Member and its members are readonly for the .net application.
                    END_VAR
                </code>
            </example>
            </summary>
        </member>
        <member name="M:Vortex.Connector.Attributes.ReadOnlyAttribute.#ctor">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.Attributes.ReadOnlyAttribute"/>
            </summary>
        </member>
        <member name="T:Vortex.Connector.Attributes.TypeMetaDescriptorAttribute">
            <summary>
            Provides meta information about Plc controller type for the library compilation process.
            <note type="note">
               This attribute is not applicable in framework consumers code. It serves a purpose of providing information about the library metadata.
            </note>
            </summary>
        </member>
        <member name="M:Vortex.Connector.Attributes.TypeMetaDescriptorAttribute.#ctor(System.String,System.String,System.String,Vortex.Connector.TypeComplexityEnum)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.Attributes.TypeMetaDescriptorAttribute"/>
            </summary>
            <param name="attributes">Attributes of this type</param>
            <param name="typeName">Type name</param>
            <param name="namespace">Namespace of the library.</param>
            <param name="typeComplexityInfo">Type complexity information.</param>
        </member>
        <member name="P:Vortex.Connector.Attributes.TypeMetaDescriptorAttribute.Data">
            <summary>
            Gets the metadata for this type.
            </summary>
        </member>
        <member name="T:Vortex.Connector.BuilderHelpers.Arrays">
            <summary>
            Helper methods for creating and manipulating arrays in Twin objects.
            </summary>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.InstantiateArray(System.Array,Vortex.Connector.IVortexObject,System.String,System.String,System.Func{Vortex.Connector.IVortexObject,System.String,System.String,System.Object})">
            <summary>
            Instantiates an array.
            </summary>
            <param name="array">Array</param>
            <param name="parent">Parent object.</param>
            <param name="readableTail">Human readable tail.</param>
            <param name="symbolTail">Symbol tail.</param>
            <param name="intializer">Intializes</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.InstantiateArray(System.Array,System.Func{System.Object})">
            <summary>
            Instantiates an array.
            </summary>
            <param name="array">Array</param>
            <param name="intializer">Intializer</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyShadowToCyclicPrimitive``1(System.Array)">
            <summary>
            Copies shadows of an array of primitive type into onliners. [Internal use only]
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="arr">Array to have the values copied.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyShadowToCyclicComplex``1(System.Array)">
            <summary>
            Copies shadows of an array of a complex type into onliners. [Internal use only]
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="arr">Array to have the values copied.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyCyclicToShadowPrimitive``1(System.Array)">
            <summary>
            Copies onliners of an array of a primitive type into shadows. [Internal use only]
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="arr">Array to have the values copied.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyCyclicToShadowComplex``1(System.Array)">
            <summary>
            Copies onliners of an array of a complex type into shadows. [Internal use only]
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="arr">Array to have the values copied.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.GetIndicesAsString(System.Int32[])">
            <summary>
            Get indice of an array as string.[Internal use only]
            </summary>
            <param name="indice">Array indice.</param>
            <returns>String representation of indice</returns>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.GetIndicesAsString(System.Array)">
            <summary>
            Get indicies of an array as an array of string.[Internal use only]
            </summary>
            <param name="array">Array indice.</param>
            <returns>Array of string representation of indice.</returns>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.GetIndices(System.Array)">
            <summary>
            Creates list of indicies of give array.
            </summary>
            <param name="array">Array from which indiecies are being created.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyPlainToOnline``2(System.Array,System.Array)">
            <summary>
            Copies plainers of an array into onliners. [Internal use only]
            </summary>        
            <param name="plainSource">Source array.</param>
            <param name="onlineTarget">Destination array.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyPlainToShadow``2(System.Array,System.Array)">
            <summary>
            Copies plainers of an array into shadows. [Internal use only]
            </summary>        
            <param name="plainSource">Source array.</param>
            <param name="onlineTarget">Destination array.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyOnlineToPlain``2(System.Array,System.Array)">
            <summary>
            Copies onliners of an array into plainers. [Internal use only]
            </summary>        
            <param name="onlineSource">Source array.</param>
            <param name="plainTarget">Destination array.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CopyShadowToPlain``2(System.Array,System.Array)">
            <summary>
            Copies shadows of an array into plainers. [Internal use only]
            </summary>        
            <param name="onlineSource">Source array.</param>
            <param name="plainTarget">Destination array.</param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.CreatePlainerType``1(System.Array)">
            <summary>
            Creates an array of plainer type. [Internal use only]
            </summary>
            <typeparam name="P"></typeparam>
            <param name="array"></param>
        </member>
        <member name="M:Vortex.Connector.BuilderHelpers.Arrays.InstantiatePlainerType``1(System.Array)">
            <summary>
            Instantites an array of plainer type. [Internal use only]
            </summary>
            <typeparam name="P"></typeparam>
            <param name="array"></param>
        </member>
        <member name="T:Vortex.Connector.CommStateEnum">
            <summary>
            Enumeration of possible states of target system.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Invalid">
            <summary>
            Target system is in invalid state.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Idle">
            <summary>
            Target system is in idle state.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Reset">
            <summary>
            Target system is being reset.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Init">
            <summary>
            Target system is being initialized | initialized.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Start">
            <summary>
            Target system has stared.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Run">
            <summary>
            Target system is running.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Stop">
            <summary>
            Target system is stopped.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.SaveConfig">
            <summary>
            Target system is saving configuration
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.LoadConfig">
            <summary>
            Target system is loading config.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.PowerFailure">
            <summary>
            Target system has lost power.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.PowerGood">
            <summary>
            Target system is powered.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Error">
            <summary>
            Target system is in error state.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Shutdown">
            <summary>
            Target system is shutdown.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Suspend">
            <summary>
            Target system is suspended.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Resume">
            <summary>
            Target system has resumed operations.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Config">
            <summary>
            Tartget system is in config mode.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Reconfig">
            <summary>
            Target system is reconfiguring.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Stopping">
            <summary>
            Target system is stopping | Max states.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Incompatible">
            <summary>
            Target system is not compatible.
            </summary>
        </member>
        <member name="F:Vortex.Connector.CommStateEnum.Exception">
            <summary>
            Target system had thrown an exception.
            </summary>
        </member>
        <member name="T:Vortex.Connector.DataExchangeStatusEnum">
            <summary>
            Enumerates possible states of communication with target system.
            </summary>
        </member>
        <member name="F:Vortex.Connector.DataExchangeStatusEnum.NoComm">
            <summary>
            No communication target not available or in a state where communication is not possible.
            </summary>
        </member>
        <member name="F:Vortex.Connector.DataExchangeStatusEnum.Init">
            <summary>
            Communication with the target system is being initialized.
            </summary>
        </member>
        <member name="F:Vortex.Connector.DataExchangeStatusEnum.SymbolLoading">
            <summary>
            Application is loading the symbols from the target system.
            </summary>
        </member>
        <member name="F:Vortex.Connector.DataExchangeStatusEnum.Live">
            <summary>
            Communication is up and running.
            </summary>
        </member>
        <member name="T:Vortex.Connector.IConnector">
            <summary>
              <para>Abstract base class provides implementation contract for the PLC connector and basic common underlying logic.</para>
            </summary>
            <seealso cref="T:Vortex.Connector.RootVortexerObject" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="P:Vortex.Connector.IConnector.Logger">
            <summary>
            Provides logging capability for this connector.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnector.#ctor(System.Object[])">
            <summary>Creates an instance of Connector class</summary>
            <param name="parameters">
              <para>Connection parameters</para>     
            </param>
            <example>
            <code language="cs">
            var connector = new IConnector();
            </code>
            </example>
        </member>
        <member name="M:Vortex.Connector.IConnector.#ctor">
            <summary>
            Creates new instance of Connector class
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.Online">
            <summary>
            Gets adapter for onliners.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.ErrorCount">
            <summary>
            Gets or sets error counter of the adapter.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.IdentityProvider">
            <summary>
            Gets object identity provider.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.RwCycleCount">
            <summary>
            Gets the number of Read Write cycles from the start of the connector.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.CyclicRwDuration">
            <summary>
            Gets the last duration of Read/Write cycle in milliseconds.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.StartUpTime">
            <summary>
            Get the connector's startup timestamp.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.MonitorConnector">
            <summary>
            Gets or sets value indicating whether the performance of the monitor should be active.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.CommState">
            <summary>
            Gets the communication state <see cref="T:Vortex.Connector.CommStateEnum"/> of the connector.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.LoadingSymbol">
            <summary>
            Gets currently loading symbol information from the remote system.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.ReadWriteCycleDelay">
            <summary>
            Gets or sets delay between Read/Write cycles.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IConnector.DataExchangeStatus">
            <summary>
            Get data exchange status on this connector.
            </summary>
        </member>
        <member name="E:Vortex.Connector.IConnector.PropertyChanged">
            <summary>
            Implementation of <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnector.BuildAndStart">
            <summary>
            Builds and starts this connector.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnector.ReadBatch(System.Collections.Generic.IEnumerable{Vortex.Connector.IValueTag})">
            <summary>
            Reads batch of value items from the plc.
            </summary>
            <param name="valueTags">Value items to be read.</param>
        </member>
        <member name="M:Vortex.Connector.IConnector.WriteBatch(System.Collections.Generic.IEnumerable{Vortex.Connector.IValueTag})">
            <summary>
            Writes batch of value items to the plc.
            </summary>
            <param name="valueTags">Value items to be written.</param>
        </member>
        <member name="M:Vortex.Connector.IConnector.CreateSymbol(System.String,System.String)">
            <summary>
            Return symbol path combining parent's and member's symbol.
            </summary>
            <param name="parent">Parent's path.</param>
            <param name="member">Members name.</param>
            <returns>Combine symbol of parent and member.</returns>
        </member>
        <member name="M:Vortex.Connector.IConnector.ReloadConnector">
            <summary>
            Forces the connector to reload symbols.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnector.InvokeRpc(System.String,System.String,System.Object[])">
            <summary>
            Invokes a method from the plc.
            </summary>
            <param name="symbolPath">Symbol path of the block whit remotely invokable method</param>
            <param name="methodName">Method name. NOTE: Method must have attribute 'TcRpcEnable' declared.}</param>
            <param name="params">Method's parameters. NOTE: Only value type parameters are accepted.</param>
            <returns>Result of the remotely called method. NOTE:Only value types are allowed as return values.</returns>
        </member>
        <member name="P:Vortex.Connector.IConnector.OnlineTags">
            <summary>
            Gets online value items tags attached to this connector.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IConnector.SubscribeAllEditValueObserver(Vortex.Connector.ValueTypes.OnlinerBaseType.ValueChangeDelegate)">
            <summary>
            Subscribes to observe changes on 'Edit' property of all tags attached to this connector.
            </summary>
            <param name="subscriber"></param>
        </member>
        <member name="T:Vortex.Connector.DummyConnector">
            <summary>
            Provides a connector without real target system connections.
            </summary>
        </member>
        <member name="P:Vortex.Connector.DummyConnector.ErrorCount">
            <summary>
            Gets or sets error counter of the adapter.
            </summary>
        </member>
        <member name="M:Vortex.Connector.DummyConnector.BuildAndStart">
            <summary>
            This method does not have effect on <see cref="T:Vortex.Connector.DummyConnector"/>
            </summary>
        </member>
        <member name="M:Vortex.Connector.DummyConnector.InvokeRpc(System.String,System.String,System.Object[])">
            <summary>
            This method does not have effect on <see cref="T:Vortex.Connector.DummyConnector"/>
            </summary>
            <param name="symbolPath">Symbol path of the block whit remotely invokable method</param>
            <param name="methodName">Method name. NOTE: Method must have attribute 'TcRpcEnable' declared.}</param>
            <param name="params">Method's parameters. NOTE: Only value type parameters are accepted.</param>
            <returns>Result of the remotely called method. NOTE:Only value types are allowed as return values.</returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnector.ReadBatch(System.Collections.Generic.IEnumerable{Vortex.Connector.IValueTag})">
            <summary>
            Reads batch of value items from the plc.
            </summary>
            <param name="valueTags">Value items to be read.</param>
        </member>
        <member name="M:Vortex.Connector.DummyConnector.WriteBatch(System.Collections.Generic.IEnumerable{Vortex.Connector.IValueTag})">
            <summary>
            Writes batch of value items to the plc.
            </summary>
            <param name="valueTags">Value items to be written.</param>
        </member>
        <member name="M:Vortex.Connector.DummyConnector.ReloadConnector">
            <summary>
            This method does not have effect on dummy connector.
            </summary>
        </member>
        <member name="P:Vortex.Connector.DummyConnector.OnlineTags">
            <summary>
            Gets online value items tags attached to this connector.
            </summary>
        </member>
        <member name="T:Vortex.Connector.DummyConnectorFactory">
            <summary>
            Dummy connector factory class. Serves as offline connector with no connection to a controller.
            </summary>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateConnector(System.Object[])">
            <summary>
            Creates dummy connector.
            </summary>
            <param name="parameters">Connection parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateBOOL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Boolean"/> dummy tag of PLC value type BOOL
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateBYTE(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Byte"/> dummy tag of PLC value type BYTE
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateDINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int32"/> dummy tag of PLC value type DINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateDWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt32"/> dummy tag of PLC value type DWORD
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int16"/> dummy tag of PLC value type INT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateLINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Int64"/> dummy tag of PLC value type LINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateLREAL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Double"/> dummy tag of PLC value type LREAL
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateLTIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> dummy tag of PLC value type LTIME
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateLWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt64"/> dummy tag of PLC value type LWORD
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateREAL(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Single"/> dummy tag of PLC value type REAL
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateSINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.SByte"/> dummy tag of PLC value type SINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateSTRING(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.String"/> dummy tag of PLC value type STRING
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerString"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateTIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> dummy tag of PLC value type TIME
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateDATE_TIME(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.DateTime"/> dummy tag of PLC value type DATE_TIME (DT)
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateDATE(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.DateTime"/> dummy tag of PLC value type DATE
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateTIME_OF_DAY(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.TimeSpan"/> dummy tag of PLC value type TIME_OF_DAY (TOD)
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateUDINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt32"/> dummy tag of PLC value type UDINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateUINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt16"/> dummy tag of PLC value type UINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateULINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt64"/> dummy tag of PLC value type ULINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateUSINT(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.Byte"/> dummy tag of PLC value type USINT
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateWORD(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.UInt16"/> dummy tag of PLC value type WORD
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/></returns>
        </member>
        <member name="M:Vortex.Connector.DummyConnectorFactory.CreateWSTRING(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates <see cref="T:System.String"/> dummy tag of PLC value type WSTRING
            </summary>
            <param name="parent">Parent object of <see cref="T:Vortex.Connector.IVortexObject"/> type.</param>
            <param name="readableTail">Human readable tail of this value tag.</param>
            <param name="symbolTail">Symbol tail of this value tag.</param>
            <returns>New instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString"/></returns>
        </member>
        <member name="T:Vortex.Connector.EnumeratorDiscriminatorAttribute">
            <summary>
            Attribute provides information about the member being treated as enum.   
            </summary>
            <note type="note">This attribute is used emitted in connector building process. It should not be declared by the framework consumers.</note>
        </member>
        <member name="M:Vortex.Connector.EnumeratorDiscriminatorAttribute.#ctor(System.Type)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.EnumeratorDiscriminatorAttribute"/>
            </summary>
            <param name="enumeratorType">Enumerator type</param>
        </member>
        <member name="P:Vortex.Connector.EnumeratorDiscriminatorAttribute.EnumeratorType">
            <summary>
            Get the enumerator type.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Identity.IVortexIdentity">
            <summary>
            Defines identity object contract.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.IVortexIdentity.Identity">
            <summary>
            Gets the online identity.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.IVortexIdentity.AttributeName">
            <summary>
            Gets name of a named vortex object.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.IVortexIdentity.Symbol">
            <summary>
            Gets full symbol path of a vortex object.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.IVortexIdentity.HumanReadable">
            <summary>
            Gets full path of this vortex object in human readable format.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Identity.MemberByIdentityAttribute">
            <summary>
            Provides information that the member is to be returned by its identity.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Identity.NullVortexIdentity">
            <summary>
                Represents null or non-existing <see cref="T:Vortex.Connector.Identity.IVortexIdentity"/> object.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.NullVortexIdentity.Identity">
            <summary>
            Gets empty identity value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.NullVortexIdentity.AttributeName">
            <summary>
            Gets unknown identity name.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.NullVortexIdentity.Symbol">
            <summary>
            Gets unknown symbol.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.NullVortexIdentity.HumanReadable">
            <summary>
            Gets unknown human readable path.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Identity.VortexIdentityProvider">
            <summary>
            Provides access to the objects by their identities.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.#ctor(Vortex.Connector.IConnector)">
            <summary>
            Creates an instance of <seealso cref="T:Vortex.Connector.Identity.VortexIdentityProvider"/>
            </summary>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.AddIdentity(Vortex.Connector.Identity.IVortexIdentity)">
            <summary>
            Adds vortexer object to the list of identities.
            </summary>
            <param name="vortexObject">vortexer object</param>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.GetVortexerByIdentity(System.Object)">
            <summary>
            Gets vortexer object by identity, if the object implements <see cref="T:Vortex.Connector.Identity.IVortexIdentity"/>. 
            If object does not implements <see cref="T:Vortex.Connector.Identity.IVortexIdentity"/> the same object is returned.
            </summary>
            <param name="obj">Object with identity</param>
            <returns>Vortexer object with given identity.</returns>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.GetVortexerByIdentity(Vortex.Connector.Identity.IVortexIdentity)">
            <summary>
            Gets vortexer object by identity.
            </summary>
            <param name="obj">Vortexer object.</param>
            <returns>Vortexer object with given identity.</returns>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.GetVortexerByIdentity(System.UInt64)">
            <summary>
            Gets vortexer object by identity.
            </summary>
            <param name="identity">Vortexer identity address.</param>
            <returns>Vortexer object with given identity.</returns>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.ReadIdentities">
            <summary>
            Reads vortex objects identities.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.RefreshIdentities">
            <summary>
            Refreshes and sorts identities.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Identity.VortexIdentityProvider.SortIdentities">
            <summary>
            Sorts identities.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.VortexIdentityProvider.Identities">
            <summary>
            Get dictionary of identities.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Identity.VortexIdentityProvider.IdentitiesCount">
            <summary>
            Get count of identities.
            </summary>
        </member>
        <member name="T:Vortex.Connector.InvalidLicenseConnector">
            <summary>
            Fall-back connector when invalid license provided
            </summary>
        </member>
        <member name="T:Vortex.Connector.InvalidLicenseConnectorAdapter">
            <summary>
            Provides connector for application with invalid license.
            </summary>
        </member>
        <member name="M:Vortex.Connector.InvalidLicenseConnectorAdapter.#ctor(System.Object[])">
            <summary>
            Provides connector for application with invalid license and error message.
            </summary>
        </member>
        <member name="P:Vortex.Connector.InvalidLicenseConnectorAdapter.Message">
            <summary>
            Contains description of the failure
            </summary>
        </member>
        <member name="T:Vortex.Connector.InvalidLicenseConnectorFactory">
            <summary>
            Fall-back connector when invalid license provided
            </summary>
        </member>
        <member name="M:Vortex.Connector.InvalidLicenseConnectorFactory.CreateConnector(System.Object[])">
            <summary>
            Creates connector.
            </summary>
            <param name="parameters">Connection parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.IPlain">
            <summary>
            Basic abstraction for 'Plain' types.
            <note type="note">Implementation used in building process. Not to be declared by framework consumers.</note>
            </summary>
        </member>
        <member name="T:Vortex.Connector.IVortexShadowObject">
            <summary>
            Basic abstraction for 'IShadow' types.
            <note type="note">Implementation used in building process. Not to be declared by framework consumers.</note>
            </summary>
        </member>
        <member name="T:Vortex.Connector.IVortexOnlineObject">
            <summary>
            Basic abstraction for 'IOnline' types.
            <note type="note">Implementation used in building process. Not to be declared by framework consumers.</note>
            </summary>
        </member>
        <member name="T:Vortex.Connector.IValueTag">
            <summary>
               Provides basic contract for plc tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTag.EditValueChange">
            <summary>
            Delegate invoked when the 'Edit' value changes.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTag.ShadowValueChange">
            <summary>
            Delegate invoked when the 'Shadow' value changes.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IValueTag.MakeReadOnly">
            <summary>
            Makes this tag readonly for the current application.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IValueTag.Subscribe(Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate)">
            <summary>
              Subscribes this tag for cyclical reading and invokes <see cref="T:Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate"/> when the value changes.
              <note type="note">Tag will be set for cyclical reading.</note>
            </summary>
            <param name="handler">Handles the value change event.</param>
        </member>
        <member name="M:Vortex.Connector.IValueTag.UnSubscribe(Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate)">
            <summary>
                Un-subscribes this tag from handling the value change. 
                <note type="note">The cyclical reading of this tag will not be cancelled.</note>
            </summary>
            <param name="handler"></param>
        </member>
        <member name="T:Vortex.Connector.IValueTagInfo">
            <summary>
            Provides interface for information about value types symbols.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTagInfo.Group">
            <summary>
            Gets group of this value type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTagInfo.Offset">
            <summary>
            Get offset of this value type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTagInfo.Length">
            <summary>
            Gets length of this value type in bytes.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTagInfo.IsAvailable">
            <summary>
            Get the value indicating if the tag is available in the plc.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IValueTagInfo.Symbol">
            <summary>
            Get the symbol of this tag.
            </summary>
        </member>
        <member name="T:Vortex.Connector.IVortexElement">
            <summary>
            Basic contract for any type that is product of building process.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IVortexElement.Symbol">
            <summary>
            Get symbol of this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IVortexElement.AttributeName">
            <summary>
            Gets Name of this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.IVortexElement.HumanReadable">
            <summary>
            Provides a string combined from <see cref="P:Vortex.Connector.IVortexElement.AttributeName"/> of ancestors (<see cref="M:Vortex.Connector.IVortexElement.GetParent"/>) of this instance and the tail of this instance.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IVortexElement.GetParent">
            <summary>
            Gets the parent object of this instance.
            Parent object is the object that created this instance.
            </summary>
            <returns>Parent object.</returns>
        </member>
        <member name="M:Vortex.Connector.IVortexElement.GetSymbolTail">
            <summary>
            Get symbol tail of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.IVortexObject">
            <summary>
            Basic contract for any complex object that is product of build process.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IVortexObject.GetChildren">
            <summary>
            Gets all complex object that are created by this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IVortexObject.GetValueTags">
            <summary>
            Get all base type objects (tags) that are created by this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IVortexObject.AddChild(Vortex.Connector.IVortexObject)">
            <summary>
            Adds child object to the list of children of this object. <see cref="M:Vortex.Connector.IVortexObject.GetChildren"/>
            <note type="note">This method is used by the objects built in building process. Not to be used by framework consumers.</note>
            </summary>
            <param name="vortexObject">Child <see cref="T:Vortex.Connector.IVortexObject"/></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObject.AddValueTag(Vortex.Connector.IValueTag)">
            <summary>
            Adds child value tag to the list of value tags of this object. <see cref="M:Vortex.Connector.IVortexObject.GetValueTags"/>
            <note type="note">This method is used by the objects built in building process. Not to be used by framework consumers.</note>
            </summary>
            <param name="valueTag">Child <see cref="T:Vortex.Connector.IValueTag"/></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObject.GetConnector">
            <summary>
            Gets the instance of the <see cref="T:Vortex.Connector.IConnector"/> class to which this <see cref="T:Vortex.Connector.IVortexObject"/> belongs.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.IVortexObjectExtensions">
            <summary>
            Extensions methods for <see cref="T:Vortex.Connector.IVortexObject"/>.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.MakeReadOnly(Vortex.Connector.IVortexObject)">
            <summary>
            Makes <see cref="T:Vortex.Connector.IVortexObject"/> readonly for this application.     
            </summary>
            <example>
            <code>
                // Rendres whole structure value tag readonly
                ReadonlyStructure.MakeReadOnly();
                // Renders element [0,0] of the array readonly.
                roArray[0, 0].MakeReadOnly();
            </code>
            </example>
            <param name="structure">Object to be rendered readonly</param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.ReadStructure(Vortex.Connector.IVortexOnlineObject)">
            <summary>
            Reads all value tags of instance <see cref="T:Vortex.Connector.IVortexOnlineObject"/>.     
            </summary>
            <example>
            <code>
            // Reads all value tags of the MAIN PRG. The value is stored in property 'Cyclic' and 'LastValue' of the respective value tag.
            Connector.MAIN.ReadStructure();
            </code>
            </example>
            <param name="structure"></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.WriteStructure(Vortex.Connector.IVortexOnlineObject)">
            <summary>
            Writes all value tags of instance <see cref="T:Vortex.Connector.IVortexOnlineObject"/>      
            </summary>
            <example>
            <code>
            // Writes all modified values of the MAIN PRG.
            Connector.Online.MAIN.GrowingLayoutStructure.WriteStructure()
            </code>
            </example>
            <param name="structure"></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.Read(Vortex.Connector.IVortexObject)">
            <summary>
            Reads all value tags of instance <see cref="T:Vortex.Connector.IVortexOnlineObject"/>.     
            </summary>
            <example>
            <code>
            // Reads all value tags of the MAIN PRG. The value is stored in property 'Cyclic' and 'LastValue' of the respective value tag.
            Connector.MAIN.Read();
            </code>
            </example>
            <param name="structure"></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.Write(Vortex.Connector.IVortexObject)">
            <summary>
            Writes all value tags of instance <see cref="T:Vortex.Connector.IVortexOnlineObject"/>        
            </summary>
            <example>
            <code>
            // Writes all modified values of the MAIN PRG.
            Connector.Online.MAIN.GrowingLayoutStructure.Write()
            </code>
            </example>
            <param name="structure"></param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.RetrieveValueTags(Vortex.Connector.IVortexObject,System.Collections.Generic.List{Vortex.Connector.IValueTag})">
            <summary>
            Retrieves all value tags of given object.
            </summary>       
            <param name="onlineObject">Object from which the value tags are to be retrieved.</param>
            <param name="valueTags">Existing value tags.</param>
            <returns>Value tags of given object.</returns>
            <example>
            This example demonstrates how to get all value tags of the MAIN PRG object.
            <code>
                var mainProgramTags = Connector.MAIN.RetrieveValueTags();
            </code>
            </example>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.SubscribeShadowValueChange(Vortex.Connector.IVortexObject,Vortex.Connector.ValueTypes.OnlinerBaseType.ValueChangeDelegate)">
            <summary>
                Subscribes a delegate to be invoked when any <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow"/> value on given object changes its value.<see cref="T:Vortex.Connector.IVortexObject"/>
            </summary>
            <example>
            <code>
            class ShadowValueChangeObserver
            {
                public ShadowValueChangeObserver()
                {
                    Connector.MAIN.SubscribeShadowValueChange(DetectShadowValueChange);                 
                }
                
                private void DetectShadowValueChange(IValueTag valueTag, dynamic original, dynamic newValue)
                {
                    Console.WriteLine($"Value '{valueTag.Symbol}' has changed form {original} to {newValue}.")
                }
                 
            }
            </code>
            </example>
            <note>
                Notice that the value change observer uses is not an event but simple delegate. Any previous delegate assignment will be overwritten by the subscription of the new
                delegate.
            </note>
            <param name="obj">Observed object.</param>
            <param name="valueChangeDelegate">Delegate to be invoked on shadow value change.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.UnSubscribeShadowValueChange(Vortex.Connector.IVortexObject)">
            <summary>
            Un-subscribes <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow"/> value change delegate from the value tags of given object.
            </summary>
            <param name="obj">Object from which the shadow value change delegate has to be removed.</param>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.SubscribeEditValueChange(Vortex.Connector.IVortexObject,Vortex.Connector.ValueTypes.OnlinerBaseType.ValueChangeDelegate)">
            <summary>
                Subscribes a delegate to be invoked when any <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit"/> value on given object changes its value.<see cref="T:Vortex.Connector.IVortexObject"/>
            </summary>
            <example>
            <code>
            class EditValueChangeObserver
            {
                public EditValueChangeObserver()
                {
                    Connector.MAIN.SubscribeEditValueChange(DetectEditValueChange);                 
                }
                
                private void DetectEditValueChange(IValueTag valueTag, dynamic original, dynamic newValue)
                {
                    Console.WriteLine($"Value '{valueTag.Symbol}' has changed form {original} to {newValue}.")
                }
                 
            }
            </code>
            </example>
            <note>
                Notice that the value change observer uses is not an event but simple delegate. Any previous delegate assignment will be overwritten by the subscription of the new
                delegate.
            </note>
            <param name="obj">Observed object.</param>
            <param name="valueChangeDelegate">Delegate to be invoked on Edit value change.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.IVortexObjectExtensions.UnSubscribeEditValueChange(Vortex.Connector.IVortexObject)">
            <summary>
            Un-subscribes <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit"/> value change delegate from the value tags of given object.
            </summary>
            <param name="obj">Object from which the <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit"/> value change delegate has to be removed.</param>
        </member>
        <member name="T:Vortex.Connector.TypeComplexityEnum">
            <summary>
            Enumerates types of objects depending on complexity.
            </summary>
        </member>
        <member name="F:Vortex.Connector.TypeComplexityEnum.BuiltIn">
            <summary>
            Built-in value type.
            </summary>
        </member>
        <member name="F:Vortex.Connector.TypeComplexityEnum.Complex">
            <summary>
            Not-Built-in Complex type.
            </summary>
        </member>
        <member name="F:Vortex.Connector.TypeComplexityEnum.Enumerator">
            <summary>
            Enumerator type.
            </summary>
        </member>
        <member name="T:Vortex.Connector.LibraryDescriptors.TypeMetaData">
            <summary>
            Container for meta information about vortex object type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.LibraryDescriptors.TypeMetaData.TypeAttributes">
            <summary>
            Gets or sets attributes of this vortex object type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.LibraryDescriptors.TypeMetaData.TypeName">
            <summary>
            Gets or sets name of the this vortex object type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.LibraryDescriptors.TypeMetaData.Namespace">
            <summary>
            Gets or sets namespace of this vortex object type.
            </summary>
        </member>
        <member name="P:Vortex.Connector.LibraryDescriptors.TypeMetaData.TypeMetaInfo">
            <summary>
            Gets or sets information about this vortex object type complexity.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.BindLink">
            <summary>
            Provides infomation about binding link.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Peripheries.BindLink.#ctor(Vortex.Connector.Peripheries.IIoBinding,Vortex.Connector.Peripheries.BindLink,Vortex.Connector.IVortexElement,System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.Peripheries.BindLink"/>
            </summary>
            <param name="binding"></param>
            <param name="parent"></param>
            <param name="linkedProperty"></param>
            <param name="direction"></param>
            <param name="task"></param>
        </member>
        <member name="P:Vortex.Connector.Peripheries.BindLink.SymbolPath">
            <summary>
            Gets links symbol path.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.BindLink.HwPath">
            <summary>
            Gets HW path.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.BindLink.DevicePath">
            <summary>
            Gets device path.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.IIoBinding">
            <summary>
            Provides contract for IoBinding.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IIoBinding.Link">
            <summary>
            Gets link to the IO variable.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IIoBinding.Variable">
            <summary>
            Gets name of nested variable.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.IoBindingAttribute">
            <summary>
            Provides information about the hardware I/O binding path of a member. 
            </summary>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.Peripheries.IoBindingAttribute"/>.
            </summary>
            <param name="hardwarePath">Hardware item's relative path.</param>
            <param name="variable">Nested member of member.</param>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.Peripheries.IoBindingAttribute"/>.
            </summary>
            <param name="hardwarePath">Hardware item's relative path.</param> 
        </member>
        <member name="P:Vortex.Connector.Peripheries.IoBindingAttribute.HardwareItemPath">
            <summary>
            Gets the relative path of the hardware item.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IoBindingAttribute.Var">
            <summary>
            Gets the name of the nested variable for binding.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.RetrieveLinks(System.Object,System.Collections.Generic.IDictionary{System.String,Vortex.Connector.Peripheries.PeripheryLink})">
            <summary>
            Returns dictionary of links for given object.
            </summary>
            <param name="obj">Object from which the links are to be retrieved.</param>
            <param name="links">Pre-existing links.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.SaveLinksToFile(System.String,System.Object)">
            <summary>
            Saves hardware links to a text file for given object.
            </summary>
            <param name="fileName">File name.</param>
            <param name="obj">Object from which the links are to retrieved.</param>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.GetLinks(Vortex.Connector.IVortexElement,Vortex.Connector.Peripheries.BindLink,System.Collections.Generic.IList{Vortex.Connector.Peripheries.BindLink},System.String)">
            <summary>
            Gets list of <see cref="T:Vortex.Connector.Peripheries.BindLink"/>s of a <see cref="T:Vortex.Connector.IVortexElement"/>
            </summary>
            <param name="obj">Object from which the links are to be retrieved.</param>
            <param name="previousLink">Previous link that should be added to linking path.</param>
            <param name="links">Pre-existing links</param>
            <param name="task">Task to which the links are attached.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.GetConnectorsLinks(System.Object,Vortex.Connector.Peripheries.BindLink,System.Collections.Generic.IList{Vortex.Connector.Peripheries.BindLink})">
            <summary>
            Gets links of a connector object.
            </summary>
            <param name="obj">Connector object.</param>
            <param name="previousLink">Previous link that should be added to linking path.</param>
            <param name="links">Pre-existing links</param>       
            <returns>List of links</returns>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.GetParentLessLinks(System.Collections.Generic.IEnumerable{Vortex.Connector.Peripheries.BindLink},System.Collections.Generic.IList{Vortex.Connector.Peripheries.BindLink})">
            <summary>
            Returns list of <see cref="T:Vortex.Connector.Peripheries.BindLink"/>s without parent.
            </summary>
            <param name="links"></param>
            <param name="parentlessLinks"></param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoBindingAttribute.GetPrimitiveLinks(System.Collections.Generic.IEnumerable{Vortex.Connector.Peripheries.BindLink},System.Collections.Generic.IList{Vortex.Connector.Peripheries.BindLink})">
            <summary>
            Creates list of primitive links.
            </summary>
            <param name="links"></param>
            <param name="primitiveLinks"></param>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.Peripheries.IoLinkableAttribute">
            <summary>
            Attribute indicates that the member is linkable to the hardware and determines its direction.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoLinkableAttribute.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.Peripheries.IoLinkableAttribute"/>.
            </summary>
            <param name="direction">Direction of the link ("Inputs" | "Outputs"))</param>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IoLinkableAttribute.Direction">
            <summary>
            Gets the direction of the member which declares this attribute.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.IoPeripheryAttribute">
            <summary>
            Attribute provides information about the link path to a periphery.
            </summary>       
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoPeripheryAttribute.#ctor(System.String)">
            <summary>
            Creates new instnace of <see cref="T:Vortex.Connector.Peripheries.IoPeripheryAttribute"/>
            </summary>
            <param name="periphery"></param>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IoPeripheryAttribute.Periphery">
            <summary>
            Gets name that represents partial path to the periphery.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.IoTaskAttribute">
            <summary>
            Attribute provides information about the task to which I/O binding is attached.
            </summary>        
        </member>
        <member name="M:Vortex.Connector.Peripheries.IoTaskAttribute.#ctor(System.String)">
            <summary>
            Creates new instance of the <see cref="T:Vortex.Connector.Peripheries.IoTaskAttribute"/>.
            </summary>
            <param name="task"></param>
        </member>
        <member name="P:Vortex.Connector.Peripheries.IoTaskAttribute.Task">
            <summary>
            Gets the name of the task.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Peripheries.PeripheryLink">
            <summary>
            Encapsulates periphery links.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.PeripheryLink.DeviceName">
            <summary>
            Gets or sets <see cref="P:Vortex.Connector.Peripheries.PeripheryLink.DeviceName"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.Peripheries.PeripheryLink.LinkPath">
            <summary>
            Gets or sets link path.
            </summary>
        </member>
        <member name="M:Vortex.Connector.Peripheries.PeripheryLink.ToString">
            <summary>
            Creates link string.
            </summary>
            <returns>Combined path of device name and link path.</returns>
        </member>
        <member name="T:Vortex.Connector.IgnoreReflectionAttribute">
            <summary>
            Indicates that the member should not be reflected within the vortex framework.
            </summary>
        </member>
        <member name="M:Vortex.Connector.IgnoreReflectionAttribute.HasIgnoreReflectionAttribute(System.Reflection.PropertyInfo)">
            <summary>
            Checks for the existence of <see cref="T:Vortex.Connector.IgnoreReflectionAttribute"/> declaration on given property.
            </summary>
            <param name="property">PropertyInfo</param>
            <returns>True when the property declares <see cref="T:Vortex.Connector.IgnoreReflectionAttribute"/>.</returns>
        </member>
        <member name="M:Vortex.Connector.IgnoreReflectionAttribute.HasIgnoreReflectionAttribute(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Checks for the existence of <see cref="T:Vortex.Connector.IgnoreReflectionAttribute"/> declaration on given property or object instance.
            </summary>
            <param name="property"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.Reflections.ReflectionHelpers">
            <summary>
            Provides set of methods to use reflection within vortex framework.
            </summary>
        </member>
        <member name="T:Vortex.Connector.Reflections.ReflectionHelpers.IsRequiredTypeDelegate">
            <summary>
            Delegate to allow to determine that the type meets required conditions.
            </summary>
            <param name="type">Type to check.</param>
            <returns>True when the type matches required conditions.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.GetObjectOfType(System.Object,System.Type,System.Collections.Generic.List{System.Object})">
            <summary>
            Retrieves recursivelly list of objects of given type that are contained in reflected object.
            </summary>
            <param name="reflectedObject">Object that will be searched for reuired type of objects.</param>
            <param name="requiredType">Required type</param>
            <param name="listOfObjects">Pre-existing list of objects.</param>
            <returns>List of object of given type.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.GetObjectOfType(System.Object,Vortex.Connector.Reflections.ReflectionHelpers.IsRequiredTypeDelegate,System.Collections.Generic.List{System.Object})">
            <summary>
            Retrieves recursivelly list of objects that satisfy <see cref="T:Vortex.Connector.Reflections.ReflectionHelpers.IsRequiredTypeDelegate"/> and are contained in reflected object.
            </summary>
            <param name="reflectedObject">Object that will be searched for objects that match <see cref="T:Vortex.Connector.Reflections.ReflectionHelpers.IsRequiredTypeDelegate"/>.</param>
            <param name="isRequiredType">Delegate to evaluate whether the type matches the requirements.</param>
            <param name="listOfObjects">Pre-existing list of objects.</param>
            <returns>List of object of given type.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.GetObjectOfTypeAndDerived(System.Object,System.Type,System.Collections.Generic.List{System.Object})">
            <summary>
            Retrieves recursivelly list of objects that are of required type or derive from the required type and are contained in reflected object.
            </summary>
            <param name="reflectedObject">Object that will be searched for required type of objects.</param>
            <param name="requiredType">Reuired type.</param>
            <param name="listOfObjects">Pre-existing list of objects.</param>
            <returns>List of object of given type.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.HasInterface(System.Type,System.Type)">
            <summary>
            Determines if the type implments given interface. 
            </summary>
            <param name="reflectedType">Reflected type.</param>
            <param name="requiredInterface">Required interface.</param>
            <returns>True when the type implements given interface.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.Inherits(System.Type,System.Type,System.Boolean)">
            <summary>
            Determines if the type inherits from given type. 
            </summary>
            <param name="reflectedType">Reflected type.</param>
            <param name="parentType">Parent type</param>
            <param name="inherits">Default parameter set to false at the beginning of recursion.</param>
            <returns>True when the type implements given interface.</returns>
        </member>
        <member name="M:Vortex.Connector.Reflections.ReflectionHelpers.IsDerived(System.Type,System.Type)">
            <summary>
            Determines if the type inherits from given type. 
            </summary>
            <param name="reflectedType">Reflected type.</param>
            <param name="parentType">Parent type</param>       
            <returns>True when the type implements given interface.</returns>
        </member>
        <member name="T:Vortex.Connector.Reflections.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector.Reflections"/> Contais set of methods and extension methods to be reflect upon vortex framework types.
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Connector.RootVortexerObject">
            <summary>
                Object to represent the root VortexObject. Instance of this class is typically used as root for the connector object.
            </summary>
            <note>This object is used in building process and should not be directly instantiated by framework consumers.</note>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.GetSymbolTail">
            <summary>
            Get symbol tail of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Vortex.Connector.RootVortexerObject.AttributeName">
            <summary>
            Gets empty name for this root object.
            </summary>
        </member>
        <member name="P:Vortex.Connector.RootVortexerObject.Symbol">
            <summary>
            Gets empty symbol for this root object.
            </summary>
        </member>
        <member name="P:Vortex.Connector.RootVortexerObject.HumanReadable">
            <summary>
            Gets empty human readable of this root object.
            </summary>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.GetChildren">
            <summary>
            Get list for this root object.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Vortex.Connector.RootVortexerObject.Children">
            <summary>
            Gets list of children fot this root object.
            </summary>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.GetParent">
            <summary>
            Gets this instance as parent object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.AddChild(Vortex.Connector.IVortexObject)">
            <summary>
            Adds child object to this root object.
            </summary>
            <param name="vortexObject"></param>
        </member>
        <member name="P:Vortex.Connector.RootVortexerObject.Identity">
            <summary>
            Get sn empty identity for this root object.
            </summary>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.GetValueTags">
            <summary>
            Gets value tags of this root object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.AddValueTag(Vortex.Connector.IValueTag)">
            <summary>
            Adds value tag to this root object.
            </summary>
            <param name="valueTag"></param>
        </member>
        <member name="M:Vortex.Connector.RootVortexerObject.GetConnector">
            <summary>
            Get the instance of connector of this root object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vortex.Connector.StringInterpolator">
            <summary>
            Provides extension methods for PLC's string interpolation.
            </summary>        
        </member>
        <member name="M:Vortex.Connector.StringInterpolator.Interpolate(System.String,System.Object)">
            <summary>
            Interpolates original string attached to an vortex object.
            </summary>
            <param name="original">Original yet non-interpolated string.</param>
            <param name="obj">Object on which original string created.</param>
            <returns>Interpolated string.</returns>
        </member>
        <member name="M:Vortex.Connector.StringInterpolator.Interpolate(System.String,Vortex.Connector.IVortexElement)">
            <summary>
            Interpolates original string attached to an vortex object.
            </summary>
            <param name="original">Original yet non-interpolated string.</param>
            <param name="obj"><see cref="T:Vortex.Connector.IVortexElement"/> object on which original string created.</param>
            <returns>Interpolated string.</returns>
        </member>
        <member name="T:Vortex.Connector.ITwinController">
            <summary>
            Represents twin object for PLC controller.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ITwinObject">
            <summary>
            Represents twin object for complex PLC types.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ITwinPrimitive">
            <summary>
            Represents twin object for base PLC types.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.BoolValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.BoolValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerBool)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.BoolValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.BoolValueValidationRule.Validate(System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.ByteValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.ByteValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerByte)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.ByteValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.ByteValueValidationRule.Validate(System.Byte,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.DateTimeValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DateTimeValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerDateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.DateTimeValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DateTimeValueValidationRule.Validate(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.DateValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DateValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerDate)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.DateValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DateValueValidationRule.Validate(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.DintValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DintValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerDInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.DintValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DintValueValidationRule.Validate(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.DWordValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DWordValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerDWord)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.DWordValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.DWordValueValidationRule.Validate(System.UInt32,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.IntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.IntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.IntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.IntValueValidationRule.Validate(System.Int16,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.LIntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LIntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerLInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.LIntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LIntValueValidationRule.Validate(System.Int64,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.LRealValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LRealValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerLReal)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.LRealValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LRealValueValidationRule.Validate(System.Double,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.LTimeValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LTimeValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerLTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.LTimeValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LTimeValueValidationRule.Validate(System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.LWordValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LWordValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerLWord)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.LWordValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.LWordValueValidationRule.Validate(System.UInt64,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.RealValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.RealValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerReal)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.RealValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.RealValueValidationRule.Validate(System.Single,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.SIntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.SIntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerSInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.SIntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.SIntValueValidationRule.Validate(System.SByte,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.StringValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerString"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.StringValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerString)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.StringValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.StringValueValidationRule.Validate(System.String,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerString"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.TimeOfDayValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.TimeOfDayValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerTimeOfDay)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.TimeOfDayValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.TimeOfDayValueValidationRule.Validate(System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.TimeValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.TimeValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.TimeValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.TimeValueValidationRule.Validate(System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.UDIntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.UDIntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerUDInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.UDIntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.UDIntValueValidationRule.Validate(System.UInt32,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.UIntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.UIntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerUInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.UIntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.UIntValueValidationRule.Validate(System.UInt16,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.ULIntValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.ULIntValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerULInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.ULIntValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.ULIntValueValidationRule.Validate(System.UInt64,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.USintValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.USintValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerUSInt)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.USintValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.USintValueValidationRule.Validate(System.Byte,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.ValidationResult">
            <summary>
            Provides return value of a validation process.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.ValidationResult.ValidationErrorTip">
            <summary>
            Gets infomation about the validation errror.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.ValidationResult.#ctor(System.Boolean,System.String)">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.ValueValidation.ValidationResult"/>
            </summary>
            <param name="isValid">Result of the validation is valid when true.</param>
            <param name="validationErrorTip">Validation tip.</param>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.ValidationResult.IsValid">
            <summary>
            Gets resutl of the validation. When true validation is valid.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector.ValueValidation"/> namespace contains validators for PLC's value tags.    
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.WordValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.WordValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerWord)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.WordValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.WordValueValidationRule.Validate(System.UInt16,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.WStringValueValidationRule">
            <summary>
               Provides validation rule for <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString"/> type.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.WStringValueValidationRule.#ctor(Vortex.Connector.ValueTypes.OnlinerWString)">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.WStringValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.WStringValueValidationRule.Validate(System.String,System.Globalization.CultureInfo)">
            <summary>
            Validates value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString"/>
            </summary>
            <param name="value">Value to validate.</param>
            <param name="cultureInfo">Culture.</param>
            <returns>Validation result.</returns>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.IValueBoundaries`1">
            <summary>
            Contract for validation of a numerical value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue">
            <summary>
            Gets min. acceptable value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue">
            <summary>
            Gets max. acceptable valie.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueValidation.OnlinerValidationRule`1">
            <summary>
            Generic class provides base for tags validation rules.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.OnlinerValidationRule`1.Validate(`0,System.Globalization.CultureInfo)">
            <summary>
            Validates value.
            </summary>
            <param name="value">Value to be validated.</param>
            <param name="culture">Culture.</param>
            <returns></returns>
        </member>
        <member name="M:Vortex.Connector.ValueValidation.OnlinerValidationRule`1.#ctor(Vortex.Connector.ValueValidation.IValueBoundaries{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Vortex.Connector.ValueValidation.ByteValueValidationRule"/> class.
            </summary>
            <param name="onliner">
            Onliner type.
            </param>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.OnlinerValidationRule`1.Max">
            <summary>
            Gets the max. allowed value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.OnlinerValidationRule`1.Min">
            <summary>
            Gets the min. allowed value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueValidation.OnlinerValidationRule`1.ValidationErrorTip">
            <summary>
            Provides validation tip.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.ReadWriteAccess">
            <summary>
            Enumerates permitted access to a tag member.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.ReadWriteAccess.Read">
            <summary>
                Read only.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.ReadWriteAccess.ReadWrite">
            <summary>
                Read Write.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnline`1">
            <summary>
            Implementation contract for base types tags to access online values from the PLC.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Symbol">
            <summary>
            Get symbol of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.AttributeName">
            <summary>
            Gets name of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.AttributeUnits">
            <summary>
            Get units for this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Cyclic">
            <summary>
            Gets or sets cyclically accessed value of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Edit">
            <summary>
            Get or set the value that will be written to the plc in the next cyclical R/W loop.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Synchron">
            <summary>
                Gets or sets the value synchronously.
            </summary>        
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Value">
            <summary>
            Gets <see cref="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Cyclic"/> value in when accessing via IOnline interface.
            </summary>
        </member>
        <member name="E:Vortex.Connector.ValueTypes.Online.IOnline`1.ValueChanged">
            <summary>
            Raises when <see cref="P:Vortex.Connector.ValueTypes.Online.IOnline`1.Cyclic"/> value changes. Provided that the value is set for cyclical reading.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Online.IOnline`1.CyclicReading">
            <summary>
            Gets or sets value indicating weather the value is read cyclically.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineBool">
            <summary>
            Defines contract to access online value of <see cref="T:System.Boolean"/>; BOOL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineByte">
            <summary>
            Defines contract to access online value of <see cref="T:System.Byte"/>; BUTE type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineDate">
            <summary>
            Defines contract to access online value of <see cref="T:System.DateTime"/>; DATE type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineDateTime">
            <summary>
            Defines contract to access online value of <see cref="T:System.DateTime"/>; DATE_AND_TIME (DT) type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineDInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.Int32"/>; DINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineDWord">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt32"/>; DWORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.Int16"/>; INT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineLInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.Int64"/>; LINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineLReal">
            <summary>
            Defines contract to access online value of <see cref="T:System.Double"/>; LREAL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineLTime">
            <summary>
            Defines contract to access online value of <see cref="T:System.TimeSpan"/>; LTIME type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineLWord">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt64"/>; LWORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineReal">
            <summary>
            Defines contract to access online value of <see cref="T:System.Single"/>; REAL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineSInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.SByte"/>; SINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineString">
            <summary>
            Defines contract to access online value of <see cref="T:System.String"/>; STRING type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineTime">
            <summary>
            Defines contract to access online value of <see cref="T:System.TimeSpan"/>; TIME type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineTimeOfDay">
            <summary>
            Defines contract to access online value of <see cref="T:System.TimeSpan"/>; TIME_OF_DAY (TOD) type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineUDInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt32"/>; UDINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineUInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt16"/>; UINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineULInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt64"/>; ULINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineUSInt">
            <summary>
            Defines contract to access online value of <see cref="T:System.Byte"/>; USINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineWord">
            <summary>
            Defines contract to access online value of <see cref="T:System.UInt16"/>; WORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.IOnlineWString">
            <summary>
            Defines contract to access online value of <see cref="T:System.String"/>; WSTRING type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Online.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector.ValueTypes.Online"/> namespace contains interfaces that limit the access to the online variables of the PLC.
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadow`1">
            <summary>
            Implementation contract for base types tags to access shadow values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.Symbol">
            <summary>
            Gets symbol of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.AttributeName">
            <summary>
            Gets or sets name of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.AttributeUnits">
            <summary>
            Gets or sets units of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.Shadow">
            <summary>
                Gets or sets shadow value of this tag.
            </summary> 
        </member>
        <member name="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.Value">
            <summary>
            Gets or set shadow value of this tag.
            </summary>
        </member>
        <member name="E:Vortex.Connector.ValueTypes.Shadows.IShadow`1.ValueChanged">
            <summary>
            Raises when <see cref="P:Vortex.Connector.ValueTypes.Shadows.IShadow`1.Shadow"/> value changes.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowBool">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Boolean"/>; BOOL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowByte">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Byte"/>; BYTE type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowDate">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.DateTime"/>; DATE type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowDateTime">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.DateTime"/>; DATE_AND_TIME (DT) type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowDInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Int32"/>; DINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowDWord">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt32"/>; DWORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Int16"/>; INT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowLInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Int64"/>; LINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowLReal">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Double"/>; LREAL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowLTime">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.TimeSpan"/>; LTIME type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowLWord">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt64"/>; LWORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowReal">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Single"/>; REAL type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowSInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.SByte"/>; SINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowString">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.String"/>; STRING type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowTime">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.TimeSpan"/>; TIME type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowTimeOfDay">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.TimeSpan"/>; TIME_OF_DAY (TOD) type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowUDInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt32"/>; UDINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowUInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt16"/>; UINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowULInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt64"/>; ULINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowUSInt">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.Byte"/>; USINT type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowWord">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.UInt16"/>; WORD type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.IShadowWString">
            <summary>
            Defines contract to access shadow value of <see cref="T:System.String"/>; WSTRING type of the PLC.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.Shadows.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector.ValueTypes.Shadows"/> namespace contains interfaces to shadow variables of PLC tags.
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerBaseType">
            <summary>
            Base non-generic class for onliner types
            </summary>    
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerBaseType.ValueChangeDelegate">
            <summary>
            Provides delegate for detection of a change of tag value.
            </summary>
            <param name="valueTag">Tag on which the value change occurred.</param>
            <param name="original">Original value.</param>
            <param name="newValue">Changed value.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType.EditValueChange">
            <summary>
            Delegate invoked when the 'Edit' value changes.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType.ShadowValueChange">
            <summary>
            Delegate invoked when the 'Shadow' value changes.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType.ReadWriteAccess">
            <summary>
               Gets the read write access mode for this tag.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType.MakeReadOnly">
            <summary>
            Makes this tag readonly for the current application.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType.AttributeFormatString">
             <summary>
             Gets or sets string format for the display of the value.        
             </summary>
             <remarks>
                 If you would like to transform the value using String.Format use <b>FormatString</b> attribute in  your PLC code.
                 Notice the usage of <b>[[</b> and <b>]]</b>. During runtime "[[" will be replaced with "{" and "[[" will be replaced with "}" 
                 so you can use <a href="https://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=netframework-4.8">String.Format</a> class as you wish.
                 The string transformation will occur only on <b>Vortex.Presentation.Controls.Wpf.OnlineControl.OnlineControlTextBox</b>.
             </remarks>
             <example>
                 <code>
                 {attribute addProperty Name "REAL"}
                 {attribute addProperty FormatString "[[0:F2]]"}
                 REAL_val : REAL;
                 </code>
            </example>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerBaseType`1">
            <summary>
               Base generic class for onliner types. Instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBaseType`1"/> is commonly referred to as 'tag' or 'PLC tag'.  
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.EditValueChange">
            <summary>
            Gets or sets delegate that executes when <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit"/> property is changed.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ShadowValueChange">
            <summary>
            Gets or sets delegate that executed when <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow"/> property is changed.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerBaseType`1.validator">
            <summary>
            Holder field for validation rule.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Validator">
            <summary>
            Gets the validation rule for this type. Validation occurs only when property <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit"/> is changed.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.UpdateRead(`0)">
            <summary>
            Updates cyclically read value and performs notifications.        
            </summary>
            <param name="val">Updated value.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.SetLastValue">
            <summary>
            Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.LastValue"/> property value. This property should be used only for testing purposes. 
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.LastValue">
            <summary>
            Gets the last value retrieved from cyclical or batched reading. Without requesting cyclical read operation on this onliner.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerBaseType`1.cyclic">
            <summary>
            Field contains last cyclically read value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.cyclicToWrite">
            <summary>
            Gets the value that will be written in the next cycle.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic">
            <summary>
            Gets the value that was read in the last cycle or sets the value to be written in the next cycle.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetLastAvailableValue">
            <summary>
            Gets tha most recent value either <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.LastValue"/> or <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic"/> if that is more recent.       
            </summary>
            <returns></returns>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Edit">
            <summary>
            Gets the cyclicly read value. Setter set the value that will be written in the next cycle. The value is validated prior to performing write operation. 
            The value must fall between <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMinValue"/> and <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMaxValue"/>, any value outside permissible range will not be written and original value will remain unaltered.
            Editing of the value invokes <see cref="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.EditValue(`0,`0)"/> which allows for value change logging via <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.EditValueChange"/> delegate.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InitializeDefaults">
            <summary>
            Initializes default value of this generic <see cref="T:Vortex.Connector.ValueTypes.OnlinerBaseType`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow">
            <summary>
            Gets or sets shadow placeholder for the value of this instance. <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow"/> is off line placeholder that does not affect the PLC controller's value of this tag. 
            Shadow values can be written to PLC controller via 'FlushShadowToOnline' method of a respective structure.
            Online values can be written to its Shadow representation via 'FlushOnlineToShadow' method of the respective structure.
            The value must fall between <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMinValue"/> and <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMaxValue"/>, any value outside permissible range will not be set and original value will remain unaltered.
            Change of the shadow value can be observed via <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ShadowValueChange"/> delegate.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Synchron">
            <summary>
            Gets or sets the online value synchronously.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Raw">
            <summary>
            Gets the raw value read from the controller. The value is not affected by <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Translator"/> or <see cref="T:Vortex.Connector.StringInterpolator"/>.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetSymbolTail">
            <summary>
            Gets tail of the this tag symbol.
            </summary>
            <returns>Tail of this tag's symbol.</returns>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.SymbolTail">
            <summary>
            Gets or sets the tail of the symbol of this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMinValue">
            <summary>
            Gets the minimal value allowed for this tag. 
            The default min. value is minimum of this type if <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMinimum"/> is not set. 
            If the <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMinimum"/> property is set then <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMinValue"/> will return its value.        
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMaxValue">
            <summary>
            Gets the maximum value allowed for this tag. 
            The default max. value is maximum of this type if <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMaximum"/> is not set. 
            If the <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMaximum"/> property is set then <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.InstanceMaxValue"/> will return its value.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.#ctor">
            <summary>
            Allows for parameterless constructor in derived class.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Parent">
            <summary>
            Gets the parent object of this instance. Parent object is the object that created this instance. 
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetParent">
            <summary>
            Gets the parent object of this instance.
            Parent object is the object that created this instance.
            </summary>
            <returns>Parent object.</returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
            Creates an instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBaseType`1"/>.
            </summary>
            <param name="parent">Parent object that creates this instance.</param>
            <param name="readableTail"><see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.HumanReadable"/> tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.HumanReadable">
            <summary>
            Provides a string combined from <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeName"/> of ancestors (<see cref="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetParent"/>) of this instance and the tail of this instance.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Subscribe(Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate)">
            <summary>
              Subscribes this tag for cyclical reading and invokes <see cref="T:Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate"/> when the value changes.
            </summary>
            <param name="handler">Handles the value change event.</param>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.UnSubscribe(Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate)">
            <summary>
                Un-subscribes this tag from handling the value change. 
                The cyclical reading of this tag will not be cancelled.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="E:Vortex.Connector.ValueTypes.OnlinerBaseType`1.PropertyChanged">
            <summary>
               Implementation of <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </summary>
        </member>
        <member name="E:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ValueChangeEvent">
            <summary>
              Online <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic"/> property changed event.
            </summary>
        </member>
        <member name="E:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ShadowValueChangeEvent">
            <summary>
             <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Shadow"/> value changed event.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetValueChangeEventSubscribers">
            <summary>
                Gets delegates associated with ValueChangeEvent
            </summary>
            <returns></returns>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeName">
            <summary>
                Gets or sets the attribute name.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeUnits">
            <summary>
                Gets or sets the attribute units.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeToolTip">
            <summary>
            Gets or sets tool tip message for this tag.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.CyclicReading">
            <summary>
                Gets or sets a value indicating whether cyclic reading of this tag is active.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.VariableInfo">
            <summary>
            Gets information about this tag's online variable info.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Symbol">
            <summary>
                Gets the symbol of this on line variable.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.HasBeenWritten">
            <summary>
                Gets or sets a value indicating whether has been written in the last cycle.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.IsToBeRead">
            <summary>
                Gets a value indicating whether is to be read in the next cycle.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.IsToBeWritten">
            <summary>
                Gets a value indicating whether is to be written.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.WriteToPlcIsRequested">
            <summary>
                Gets or sets a value indicating whether this variable should be written to the controller in the next cycle.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ReadFromPlcIsRequested">
            <summary>
                Gets or sets a value indicating whether read from plc is requested.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMaximum">
            <summary>
            Gets or sets max. value allowed for this tag.
            If the value is not set the max. value will be the maximum allowed for this type.
            <para>
                <note>The value is typically set by attribute in the PLC code</note>           
            </para>
                <example>
                        This example demonstrates how to set value boundaries for a numerical value. <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMinimum"/> and <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMaximum"/>.
                        Notice that the name of the 'added property' is prefixed with 'Attribute' when
                        trans-piled into .net class.
                        
                        <code>
                            {attribute addProperty Minimum 10}
                            {attribute addProperty Maximum 50}
                            _integerVar : INT;
                        </code>
                    </example>
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMinimum">
            <summary>
            Gets or sets min. value allowed for this tag.
            If the value is not set the min. value will be the maximum allowed for this type.
            <para>
                <note>The value is typically set by attribute in the PLC code</note>           
            </para>
                <example>
                        This example demonstrates how to set value boundaries for a numerical value. <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMinimum"/> and <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.AttributeMaximum"/>.
                        Notice that the name of the 'added property' is prefixed with 'Attribute' when
                        trans-piled into .net class.
                        
                        <code>
                            {attribute addProperty Minimum 10}
                            {attribute addProperty Maximum 50}
                            _integerVar : INT;
                        </code>
                    </example>
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.HasWriteAccess">
            <summary>
                Get true when this tag has write access.
            </summary>
            <returns>
                The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.NotifyPropertyChanged(System.String)">
            <summary>
            Implementation of <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <param name="propertyName">
            Property name.
            </param>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.OnValueChangeEvent(`0)">
            <summary>
            Notifies the change of <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic"/>value.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.ReadFromItem">
            <summary>
            NVI should be implemented in derived class. When implemented in derived class provide reading of the <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic"/>value for this tag from a stream.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.WriteItem">
            <summary>
            NVI should be implemented in derived class. When implemented in derived class provide writing of the <see cref="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Cyclic"/>value for this tag from a stream.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBaseType`1.GetDeclaringAssembly">
            <summary>
            Gets the assembly that declares the instance of this tag.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBaseType`1.Translator">
            <summary>
            Provides translator for the localization for this tag.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerBool">
            <summary>
                Class providing access to the BOOL type online variable.
            </summary>        
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBool.#ctor">
            <summary>
            Creates new instance of <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool"/> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerBool.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerBool" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBool.InstanceMinValue">
            <summary>
            Used to satisfy <see cref="T:Vortex.Connector.ValueTypes.OnlinerBaseType"/> requirements. In case of bool value <see cref="P:Vortex.Connector.ValueTypes.OnlinerBool.InstanceMinValue"/> does not have effect.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerBool.InstanceMaxValue">
            <summary>
            Used to satisfy <see cref="T:Vortex.Connector.ValueTypes.OnlinerBaseType"/> requirements. In case of bool value <see cref="P:Vortex.Connector.ValueTypes.OnlinerBool.InstanceMaxValue"/> does not have effect.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerByte">
            <summary>
                Class providing access to the BYTE type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerByte.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerByte.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerByte.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerByte.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerByte"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerByte.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerByte.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerDate">
            <summary>
                Class providing access to the DATE type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDate.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDate.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDate.MaxValue">
            <summary>
            Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDate.MinValue">
            <summary>
            Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDate"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDate.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDate.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerDateTime">
            <summary>
                Class providing access to the DATE_AND_TIME (DT) type online variable.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDateTime.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDateTime.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime"/>.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDateTime.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDateTime.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDateTime" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDateTime.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDateTime.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerDInt">
            <summary>
                Class providing access to the DINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDInt.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerDWord">
            <summary>
                Class providing access to the DWORD type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDWord.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerDWord.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDWord.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerDWord.MaxValue">
            <summary>
               Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerDWord"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDWord.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerDWord.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerInt">
            <summary>
                Class providing access to the INT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerInt.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerInt.MinValue">
            <summary>
             Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerInt.MaxValue">
            <summary>
            Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerLInt">
            <summary>
                Class providing access to the LINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLInt.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt" /> class.
            </summary>    
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerLInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerLInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerLReal">
            <summary>
                Class providing access to the LREAL type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLReal.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLReal.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLReal.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLReal.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLReal"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLReal.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLReal.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerLTime">
            <summary>
                Class providing access to the LTIME type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLTime.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLTime.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLTime.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLTime.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLTime"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLTime.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLTime.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerLWord">
            <summary>
                Class providing access to the LWORD type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLWord.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerLWord.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerLWord.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerLWord.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerLWord"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLWord.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerLWord.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerReal">
            <summary>
                Class providing access to the REAL type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerReal.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerReal.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerReal"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerReal.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerReal.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.IsCyclicNearlyEqualTo(System.Single)">
            <summary>
            Determines whether this 'Cyclic' value is nearly equal to number argument.
            </summary>
            <param name="number">Number to compare.</param>
            <returns>True when 'Cyclic' is nearly equal.</returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.IsCyclicNearlyEqualTo(System.Single,System.Single)">
            <summary>
            Determines whether this 'Cyclic' value is nearly equal to number argument.
            </summary>
            <param name="number">Number to compare.</param>
            <param name="epsilon">Precision.</param>
            <returns>True when 'Cyclic' is nearly equal.</returns>        
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.IsSynchronNearlyEqualTo(System.Single)">
            <summary>
            Determines whether this 'Synchron' value is nearly equal to number argument.
            </summary>
            <param name="number">Number to compare.</param>
            <returns>True when 'Synchron' is nearly equal.</returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerReal.IsSynchronNearlyEqualTo(System.Single,System.Single)">
            <summary>
            Determines whether this 'Synchron' value is nearly equal to number argument.
            </summary>
            <param name="number">Number to compare.</param>
            <param name="epsilon">Precision.</param>
            <returns>True when 'Synchron' is nearly equal.</returns>     
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerSInt">
            <summary>
                Class providing access to the SINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerSInt.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerSInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerSInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerSInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerSInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerSInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerSInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerString">
            <summary>
                Class providing access to the STRING type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerString.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerString" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerString.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerString" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerString.Cyclic">
            <summary>
            Gets translated and interpolated string of <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Cyclic"/> value. Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Cyclic"/> value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerString.Synchron">
            <summary>
            Gets translated and interpolated string of <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Synchron"/> value. Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Synchron"/> value.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerString.GetSynchron">
            <summary>
            Synchron value when overridden. When not overridden <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Cyclic"/> value is returned.
            </summary>
            <returns><see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Synchron"/></returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerString.SetSynchron(System.String)">
            <summary>
            Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Synchron"/> value when overridden. When not overriden <see cref="P:Vortex.Connector.ValueTypes.OnlinerString.Cyclic"/> value is set.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerString.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerString.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerTime">
            <summary>
                Class providing access to the TIME type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerTime.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerTime.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerTime.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerTime.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTime"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerTime.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerTime.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay">
            <summary>
                Class providing access to the TIME_OF_DAY type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerTimeOfDay"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerTimeOfDay.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerUDInt">
            <summary>
                Class providing access to the UDINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUDInt.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUDInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUDInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUDInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUDInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUDInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUDInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerUInt">
            <summary>
                Class providing access to the UINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUInt.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerULInt">
            <summary>
                Class providing access to the ULINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerULInt.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerULInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerULInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerULInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerULInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerULInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerULInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerUSInt">
            <summary>
                Class providing access to the USINT type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUSInt.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerUSInt.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUSInt.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerUSInt.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerUSInt"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUSInt.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerUSInt.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerWord">
            <summary>
                Class providing access to the WORD type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWord.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWord.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerWord.MinValue">
            <summary>
                Gets the min value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/>.
            </summary>
        </member>
        <member name="F:Vortex.Connector.ValueTypes.OnlinerWord.MaxValue">
            <summary>
                Gets the max value of <see cref="T:Vortex.Connector.ValueTypes.OnlinerWord"/>.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWord.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWord.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.OnlinerWString">
            <summary>
                Class providing access to the WSTRING type online variable.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWString.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString" /> class.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWString.#ctor(Vortex.Connector.IVortexObject,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.OnlinerWString" /> class.
            </summary>
            <param name="parent">Parent object of this instance.</param>
            <param name="readableTail">Human readable tail of this instance.</param>
            <param name="symbolTail">Symbol tail of this instance.</param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWString.Cyclic">
            <summary>
            Gets tranlated and interpolated string of <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Cyclic"/> value. Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Cyclic"/> value.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWString.Synchron">
            <summary>
            Gets tranlated and interpolated string of <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Synchron"/> value. Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Synchron"/> value.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWString.GetSynchron">
            <summary>
            Synchron value when overriden. When not overriden <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Cyclic"/> value is returned.
            </summary>
            <returns><see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Synchron"/></returns>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.OnlinerWString.SetSynchron(System.String)">
            <summary>
            Sets <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Synchron"/> value when overriden. When not overriden <see cref="P:Vortex.Connector.ValueTypes.OnlinerWString.Cyclic"/> value is set.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWString.InstanceMaxValue">
            <summary>
                Gets the max value for this instance.
            </summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.OnlinerWString.InstanceMinValue">
            <summary>
                Gets the min value for this instance.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector.ValueValidation"/> namespace contains types that provide access to the value tags of the PLC.
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.ValueChangedEventArgs">
            <summary>
            Provides class for encapsulation of arguments for <see cref="T:Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate"/>.
            </summary>
        </member>
        <member name="M:Vortex.Connector.ValueTypes.ValueChangedEventArgs.#ctor(System.Object)">
            <summary>Initializes a new instance of the <see cref="T:Vortex.Connector.ValueTypes.ValueChangedEventArgs" /> class.</summary>
        </member>
        <member name="P:Vortex.Connector.ValueTypes.ValueChangedEventArgs.NewValue">
            <summary>
            Get new | change value.
            </summary>
        </member>
        <member name="T:Vortex.Connector.ValueTypes.ValueChangedEventHandlerDelegate">
            <summary>
            Provides delegate for notification of tags value change.
            </summary>
            <param name="sender">Value tag where the change occurred.</param>
            <param name="args">Value change arguments.</param>
        </member>
        <member name="T:Vortex.Connector.NamespaceDoc">
            <summary>
            <para>
                <see cref="N:Vortex.Connector"/> namespace groups building block of Vortex Connector that mediates the connectivity to the PLC for vortex framework application. 
                It also provides multiple functions to manage the transfer of data between .net application and PLC system.
            </para>
            </summary>
        </member>
        <member name="T:Vortex.Localizations.Abstractions.ILocalizer">
            <summary>
            Defines contract for string  localizer.
            </summary>
        </member>
        <member name="T:Vortex.Localizations.Abstractions.ITranslator">
            <summary>
            Abstract class defines string translator.
            </summary>
        </member>
        <member name="M:Vortex.Localizations.Abstractions.ITranslator.#ctor">
            <summary>
            Creates new instance of <see cref="T:Vortex.Localizations.Abstractions.ITranslator"/>
            </summary>
        </member>
    </members>
</doc>
